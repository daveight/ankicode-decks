```python

T = TypeVar('T')

class BinaryTreeNode(Generic[T]):
    def __init__(self, data: Optional[Type[T]]=None, left=None, right=None):
        self.data = data
        self.left = left
        self.right = right

def rebuild_b_s_t_from_preorder(preorder_sequence):

    if not preorder_sequence:
        return None

    transition_point = next((i for i, a in enumerate(preorder_sequence)
                             if a > preorder_sequence[0]),
                            len(preorder_sequence))
    return BinaryTreeNode(
        preorder_sequence[0],
        rebuild_b_s_t_from_preorder(preorder_sequence[1:transition_point]),
        rebuild_b_s_t_from_preorder(preorder_sequence[transition_point:]))
```
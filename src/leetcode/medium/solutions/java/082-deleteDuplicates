```java
class ListNode<T> {
    T data;
    ListNode<T> next;

    public ListNode() { }

    public ListNode(T data, ListNode<T> next) {
        this.data = data;
        this.next = next;
    }
}

public class Solution {

    public ListNode<Integer> deleteDuplicates(ListNode<Integer> head) {
        ListNode<Integer> dummy = new ListNode<>();
        dummy.next = head;
        ListNode pre = dummy; // last unique node we found
        ListNode node = pre.next;
        while (node != null) {
            // find the last node that has the same value as current node
            while (node.next != null && node.next.data == node.data) {
                node = node.next;
            }
            // now, node has different value from its next node (if next
            // node exists), we need to compare with previous node to
            // see whether `node` has unique value
            if (pre.next == node) {
                // ! don't use (pre.val == node.val) unless you are sure
                // dummy has different value from head node
                pre = node;
            } else {
                pre.next = node.next;
            }
            node = node.next;
        }
        return dummy.next;
}
```
```python
def gray_code(num_bits):
    if num_bits == 0:
        return [0]

    # These implicitly begin with 0 at bit-index (num_bits - 1).
    gray_code_num_bits_minus_1 = gray_code(num_bits - 1)
    # Now, add a 1 at bit-index (num_bits - 1) to all entries in
    # gray_code_num_bits_minus_1.
    leading_bit_one = 1 << (num_bits - 1)
    # Process in reverse order to achieve reflection of
    # gray_code_num_bits_minus_1.
    return gray_code_num_bits_minus_1 + [
        leading_bit_one | i for i in reversed(gray_code_num_bits_minus_1)
    ]
```
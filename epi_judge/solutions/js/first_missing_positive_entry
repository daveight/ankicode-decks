```js
function swap(arr, i, j) {
    const tmp = arr[i];
    arr[i] = arr[j];
    arr[j] = tmp;
}

function findFirstMissingPositive(A) {
    // Record which values are present by writing A[i] to index A[i] - 1 if
    // A[i] is between 1 and len(A), inclusive. We save the value at index A[i]
    // - 1 by swapping it with the entry at i. If A[i] is negative or greater
    // than n, we just advance i.
    for (let i = 0; i < A.length; ++i) {
        while (0 < A[i] && A[i] <= A.length && A[i] != A[A[i] - 1]) {
            swap(A, i, A[i] - 1);
        }
    }

    // Second pass through A to search for the first index i such that A[i] !=
    // i+1, indicating that i + 1 is absent. If all numbers between 1 and
    // len(A) are present, the smallest missing positive is len(A) + 1.
    for (let i = 0; i < A.length; ++i) {
        if (A[i] != i + 1) {
            return i + 1
        }
    }
    return A.length + 1
}
```

```cxx
#include <iterator>
#include <stack>
#include <vector>

using std::stack;
using std::vector;

class Solution {
public:
    vector<int> examineBuildingsWithSunset(const vector<int> &sequence) {
        vector<int>::const_iterator sequence_begin = cbegin(sequence);
        vector<int>::const_iterator sequence_end = cend(sequence);
        int building_idx = 0;
        struct BuildingWithHeight {
            int id, height;
        };
        stack<BuildingWithHeight> candidates;
        while (sequence_begin != sequence_end) {
            int building_height = *sequence_begin++;
            while (!candidates.empty() && building_height >= candidates.top().height) {
                candidates.pop();
            }
            candidates.emplace(BuildingWithHeight{building_idx++, building_height});
        }

        vector<int> buildings_with_sunset;
        while (!candidates.empty()) {
            buildings_with_sunset.emplace_back(candidates.top().id);
            candidates.pop();
        }
        return buildings_with_sunset;
    }
};
```
```java
public class Solution {

    public List<Integer> spiralOrder(int[][] matrix) {
        List<Integer> result = new ArrayList<Integer>();
        int rows = matrix.length;
        if (rows == 0) {
            return result;
        }
        int cols = matrix[0].length;
        // loop including the middle row in matrix
        for (int i = 0; i <= (rows - 1) / 2; i++) {
            int rowStart = i;
            int colStart = i;
            int colEnd = cols - i - 1;
            int rowEnd = rows - i - 1;
            // top row
            for (int j = colStart; j <= colEnd; j++) {
                result.add(matrix[rowStart][j]);
            }
            // right column
            if (colEnd >= 0 && colEnd < cols && colEnd >= colStart) {
                for (int j = rowStart + 1; j <= rowEnd; j++) {
                    result.add(matrix[j][colEnd]);
                }
            }
            // bottom row, skip if same as top row
            if (rowEnd > rowStart) {
                for (int j = colEnd - 1; j >= colStart; j--) {
                    result.add(matrix[rowEnd][j]);
                }
            }
            // left column, skip if same as right column
            if (colStart < colEnd) {
                for (int j = rowEnd - 1; j >= rowStart + 1; j--) {
                    result.add(matrix[j][colStart]);
                }
            }
        }
        return result;
    }
}
```
```cxx
#include <algorithm>
#include <vector>
using std::vector;

class Solution {
public:
    vector<vector<int>> rotateMatrix(vector<vector<int>> square_matrix) {
        const int matrix_size = square_matrix.size() - 1;
        for (int i = 0; i < (square_matrix.size() / 2); ++i) {
            for (int j = i; j < matrix_size - i; ++j) {
                // Perform a 4-way exchange.
                int temp1 = square_matrix[matrix_size - j][i];
                int temp2 = square_matrix[matrix_size - i][matrix_size - j];
                int temp3 = square_matrix[j][matrix_size - i];
                int temp4 = square_matrix[i][j];
                square_matrix[i][j] = temp1;
                square_matrix[matrix_size - j][i] = temp2;
                square_matrix[matrix_size - i][matrix_size - j] = temp3;
                square_matrix[j][matrix_size - i] = temp4;
            }
        }
        return square_matrix;
    }
};
```
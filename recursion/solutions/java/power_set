```java
import java.util.ArrayList;
import java.util.Collections;
import java.util.List;
import java.util.function.BiPredicate;

public class Solution {
    public List<List<Integer>> generatePowerSet(List<Integer> inputSet) {
        List<List<Integer>> powerSet = new ArrayList<>();
        for (int intForSubset = 0; intForSubset < (1 << inputSet.size()); ++intForSubset) {
            int bitArray = intForSubset;
            List<Integer> subset = new ArrayList<>();
            while (bitArray != 0) {
                subset.add(inputSet.get((int)(Math.log(bitArray & ~(bitArray - 1)) / Math.log(2))));
                bitArray &= bitArray - 1;
            }
            powerSet.add(subset);
        }
        return powerSet;
    }
}
```
```java
import java.util.ArrayList;
import java.util.Collections;
import java.util.List;

public class Solution {
    public int findBiggestProductNMinusOneProduct(List<Integer> A) {

        // Builds suffix products.
        int product = 1;
        List<Integer> suffixProducts =
                new ArrayList<>(Collections.nCopies(A.size(), 0));
        for (int i = A.size() - 1; i >= 0; --i) {
            product *= A.get(i);
            suffixProducts.set(i, product);
        }

        // Finds the biggest product of (n - 1) numbers.
        int prefixProduct = 1;
        int maxProduct = Integer.MIN_VALUE;
        for (int i = 0; i < A.size(); ++i) {
            int suffixProduct = i + 1 < A.size() ? suffixProducts.get(i + 1) : 1;
            maxProduct = Math.max(maxProduct, prefixProduct * suffixProduct);
            prefixProduct *= A.get(i);
        }
        return maxProduct;
    }
}
```
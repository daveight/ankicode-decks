```java
import java.util.ArrayList;
import java.util.Collections;
import java.util.List;

class BinaryTreeNode<T> {
    T data;
    BinaryTreeNode<T> left;
    BinaryTreeNode<T> right;

    public BinaryTreeNode() { }

    public BinaryTreeNode(T data, BinaryTreeNode<T> left, BinaryTreeNode<T> right) {
        this.data = data;
        this.left = left;
        this.right = right;
    }
}

class Interval {
    int left;
    int right;
}

public class Solution {
    public List<Integer> rangeLookupInBst(BinaryTreeNode<Integer> tree, Interval interval) {
        List<Integer> result = new ArrayList<>();
        rangeLookupInBstHelper(tree, interval, result);
        return result;
    }

    private void rangeLookupInBstHelper(BinaryTreeNode<Integer> tree, Interval interval, List<Integer> result) {
        if (tree == null) {
            return;
        }
        if (interval.left <= tree.data && tree.data <= interval.right) {
            // tree.data lies in the interval.
            rangeLookupInBstHelper(tree.left, interval, result);
            result.add(tree.data);
            rangeLookupInBstHelper(tree.right, interval, result);
        } else if (interval.left > tree.data) {
            rangeLookupInBstHelper(tree.right, interval, result);
        } else { // interval.right >= tree.data
            rangeLookupInBstHelper(tree.left, interval, result);
        }
    }
}
```
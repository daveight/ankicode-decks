```python
class Jug:
    def __init__(self, low, high):
        self.low = low
        self.high = high

class VolumeRange:
    def __init__(self, low, high):
        self.low = low
        self.high = high
    def __eq__(self, obj):
        return self.low == obj.low and self.high == obj.high
    def __hash__(self):
        return hash(self.low) + hash(self.high)


def check_feasible(jugs, L, H):
    def check_feasible_helper(L, H):
        if L > H or VolumeRange(L, H) in c or (L < 0 and H < 0):
            return False

        # Checks the volume for each jug to see if it is possible.
        if any((L <= j.low and j.high <= H)
               or check_feasible_helper(L - j.low, H - j.high) for j in jugs):
            return True
        c.add(VolumeRange(L, H))  # Marks this as impossible.
        return False

    c = set()
    return check_feasible_helper(L, H)
```
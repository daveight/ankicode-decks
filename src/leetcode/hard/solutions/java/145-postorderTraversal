```java
class BinaryTreeNode<T> {
    T data;
    BinaryTreeNode<T> left;
    BinaryTreeNode<T> right;

    public BinaryTreeNode() { }

    public BinaryTreeNode(T data, BinaryTreeNode<T> left, BinaryTreeNode<T> right) {
        this.data = data;
        this.left = left;
        this.right = right;
    }
}

public class Solution {

    public List<Integer> postorderTraversal(BinaryTreeNode<Integer> root) {
        List<Integer> result = new ArrayList<>();
        Stack<BinaryTreeNode<Integer>> children = new Stack<>();
        children.push(root);
        while (!children.isEmpty()) {
            BinaryTreeNode<Integer> node = children.pop();
            if (node != null) {
                // insert node's value at the beginning of list
                result.add(0, node.data);
                children.push(node.left);
                children.push(node.right);
            }
        }
        return result;
    }
}
```
```java
public class Solution {

    // try to insert each number into all existing subsets
    public List<List<Integer>> subsets(int[] nums) {
        List<List<Integer>> res = new ArrayList<List<Integer>>();
        Arrays.sort(nums);

        // push initial empty subset
        res.add(new ArrayList<>());

        for (int num : nums) {
            int sz = res.size(); // we don't need temp list any more
            for (int i = 0; i < sz; i++) {
                List<Integer> list = new ArrayList<>(res.get(i));
                list.add(num);
                res.add(list);
            }
        }
        return res;
    }
    
    // we have to use temporary list
    public List<List<Integer>> subsets2(int[] nums) {
        List<List<Integer>> res = new ArrayList<List<Integer>>();
        Arrays.sort(nums);

        // push initial empty subset
        res.add(new ArrayList<>());

        for (int num : nums) {
            // try insert num into all existing subsets
            List<List<Integer>> temp = new ArrayList<>(); 
            for (List<Integer> sub : res) {
                List<Integer> list = new ArrayList<>(sub);
                list.add(num);
                temp.add(list);
            }
            res.addAll(temp);
        }
        return res;
    }
}
```
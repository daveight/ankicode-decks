```java
class ListNode<T> {
    T data;
    ListNode<T> next;

    public ListNode() { }

    public ListNode(T data, ListNode<T> next) {
        this.data = data;
        this.next = next;
    }
}

public class Solution {
    // Assumes nodeToDelete is not tail.
    public ListNode<Integer> deleteList(ListNode<Integer> head, int nodeToDeleteIdx) {
        ListNode<Integer> nodeToDelete = head;
        if (nodeToDelete == null)
            throw new RuntimeException("List is empty");
        while (nodeToDeleteIdx-- > 0) {
            if (nodeToDelete.next == null)
                throw new RuntimeException("Can't delete last node");
            nodeToDelete = nodeToDelete.next;
        }

        final ListNode<Integer> finalNodeToDelete = nodeToDelete;

        nodeToDelete.data = nodeToDelete.next.data;
        nodeToDelete.next = nodeToDelete.next.next;

        return head;
    }
}
```
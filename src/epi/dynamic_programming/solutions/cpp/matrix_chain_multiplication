```cpp
#include <algorithm>

class Solution {
public:
    int matrix_multiplication_min_cost(vector<int> p) {
        int n = p.size();
        int dp[n][n];
        for (int i = 0; i < n; i++) {
            if (i > 0) {
                dp[i][i] = 0;
            }
        }

        for (int i = 1; i < n - 1; i++) {
            for (int j = 1; j < n - i; j++) {
                dp[j][j + i] = min(dp[j + 1][j + i] + p[j - 1] * p[j] * p[j + i],
                    dp[j][j + i - 1] + p[j - 1] * p[j + i - 1] * p[j + i]);
            }
        }

        return dp[1][n - 1];
    }
};
```
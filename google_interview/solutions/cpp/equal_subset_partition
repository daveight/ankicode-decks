```cpp
class Solution {
private:
    bool has_partition_with_sum(vector<int> src, int n, int sum) {
        if (sum == 0) {
            return true;
        }

        if (n == 0 && sum != 0) {
            return false;
        }

        if (src[n - 1] > sum) {
            return has_partition_with_sum(src, n - 1, sum);
        }

        return has_partition_with_sum(src, n - 1, sum) ||
            has_partition_with_sum(src, n - 1, sum - src[n - 1]);
    }

public:
    bool can_be_partitioned(vector<int> src) {
        int sum = 0;
        for (int i = 0; i < src.size(); i++) {
            sum += src[i];
        }

        // no partitioning exists if sum is odd
        if (sum % 2 != 0) {
            return false;
        }

        return has_partition_with_sum(src, src.size(), sum / 2);
    }
};
```
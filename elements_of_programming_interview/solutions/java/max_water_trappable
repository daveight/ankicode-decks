```java
import java.util.Collections;
import java.util.List;

public class Solution {
    public int calculateTrappingWater(List<Integer> heights) {
        // Finds the index with maximum height.
        int maxH = heights.indexOf(Collections.max(heights));
        return trappingWaterTillEnd(heights, 0, maxH, 1) +
                trappingWaterTillEnd(heights, heights.size() - 1, maxH, -1);
    }

    // Assume heights[end] is maximum height.
    private int trappingWaterTillEnd(List<Integer> heights, int begin, int end, int step) {
        int sum = 0, highestLevelSeen = Integer.MIN_VALUE;
        for (int i = begin; i != end; i += step) {
            if (heights.get(i) >= highestLevelSeen) {
                highestLevelSeen = heights.get(i);
            } else {
                sum += highestLevelSeen - heights.get(i);
            }
        }
        return sum;
    }
}
```
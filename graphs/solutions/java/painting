```java
import java.util.ArrayDeque;
import java.util.ArrayList;
import java.util.List;
import java.util.Queue;

public class Solution {
    private class Coordinate {
        public Integer x;
        public Integer y;

        public Coordinate(Integer x, Integer y) {
            this.x = x;
            this.y = y;
        }
    }

    public List<List<Integer>> flipColor(int x, int y, List<List<Integer>> src) {
        List<List<Boolean>> image = new ArrayList<>();
        for (int i = 0; i < src.size(); i++) {
            image.add(new ArrayList<>());
            for (int j = 0; j < src.get(i).size(); j++) {
                image.get(i).add(src.get(i).get(j) == 1);
            }
        }
        boolean color = image.get(x).get(y);
        Queue<Coordinate> q = new ArrayDeque<>();
        image.get(x).set(y, !image.get(x).get(y)); // Flips.
        q.add(new Coordinate(x, y));
        while (!q.isEmpty()) {
            Coordinate cur = q.element();
            for (Coordinate nextMove : List.of(new Coordinate(cur.x, cur.y + 1), new Coordinate(cur.x, cur.y - 1), new Coordinate(cur.x + 1, cur.y), new Coordinate(cur.x - 1, cur.y))) {
                if (nextMove.x >= 0 && nextMove.x < image.size() && nextMove.y >= 0 &&
                        nextMove.y < image.get(nextMove.x).size() &&
                        image.get(nextMove.x).get(nextMove.y) == color) {
                    // Flips the color.
                    image.get(nextMove.x).set(nextMove.y, !color);
                    q.add(nextMove);
                }
            }
            q.remove();
        }

        List<List<Integer>> res = new ArrayList<>();
        for (int i = 0; i < image.size(); i++) {
            res.add(new ArrayList<>());
            for (int j = 0; j < image.get(i).size(); j++) {
                res.get(i).add(image.get(i).get(j) ? 1 : 0);
            }
        }
        return res;
    }
}
```
```java
public class Solution {
    private int findLow(int[] a, int key) {
        int low = 0;
        int high = a.length - 1;
        int mid = high / 2;

        while (low < high) {
            int val = a[mid];
            if (val < key) {
                low = mid + 1;
            } else {
                high = mid - 1;
            }
            mid = low + (high - low) / 2;
        }

        if (low < a.length && a[low] == key) {
            return low;
        }

        return -1;
    }

    private int findHigh(int[] a, int key) {
        int low = 0;
        int high = a.length - 1;
        int mid = high / 2;

        while (low <= high) {
            int val = a[mid];
            if (val <= key) {
                low = mid + 1;
            } else {
                high = mid - 1;
            }
            mid = low + (high - low) / 2;
        }

        if (high >= 0 && high < a.length && a[high] == key) {
            return high;
        }

        return -1;
    }

    public int[] highLowIndex(int[] a, int key) {
        return new int[] { findLow(a, key), findHigh(a, key) };
    }
}
```